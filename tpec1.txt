//hello-world
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() 
{
	
    char s[100];
    //scanf("%[^\n]%*c",&s);
  	
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    printf("Hello, World!\n");
    gets(s);
    puts(s);
    return 0;
}
//for-loop
#include <stdio.h>

int main() {
    int a, b;
    
    scanf("%d %d", &a, &b);
    
        for (int i = a; i <= b; i++) {
        if (i >= 1 && i <= 9) {
            switch (i) {
                case 1: printf("one\n");
                    break;
                case 2: printf("two\n"); 
                    break;
                case 3: printf("three\n");
                    break;
                case 4: printf("four\n");
                    break;
                case 5: printf("five\n");
                    break;
                case 6: printf("six\n");
                    break;
                case 7: printf("seven\n"); 
                    break;
                case 8: printf("eight\n");
                    break;
                case 9: printf("nine\n"); 
                    break;
            }
        } else if (i >= 10) {
            if (i % 2 == 0) {
                printf("even\n");
            } else {
                printf("odd\n");
            }
        }
    }
    
    return 0;
}

//functions
#include <iostream>
#include <cstdio>
using namespace std;

int max_of_four(int a,int b,int c,int d){
    if(a>b && a>c && a>d)
        return a;
    
    else if(b>c && b>d)
        return b;
    
    else if(c>d)
        return c;
    
    else 
        return d;
    
}
/*
Add `int max_of_four(int a, int b, int c, int d)` here.
*/

int main() {
    int a, b, c, d;
    scanf("%d %d %d %d", &a, &b, &c, &d);
    int ans = max_of_four(a, b, c, d);
    printf("%d", ans);
    
    return 0;
}


//
#include <stdio.h>

void update(int *a, int *b) {
  
    int t = *a;         
    *a = *a + *b;     
    *b =abs(t-*b);  
}

int main() {
    int a, b;
    int *pa = &a, *pb = &b;
    
    scanf("%d %d", &a, &b);  
    update(pa, pb);        
    printf("%d\n%d", a, b);  

    return 0;
}



//for-loop(greater than 9 case)
#include <stdio.h>

int main() {
    
    int i=0;
    scanf("%d",&i);
     
         if (i >= 1 && i <= 9) 
        {
              switch (i)
             {
                case 1: printf("one\n");
                    break;
                case 2: printf("two\n"); 
                    break;
                case 3: printf("three\n");
                    break;
                case 4: printf("four\n");
                    break;
                case 5: printf("five\n");
                    break;
                case 6: printf("six\n");
                    break;
                case 7: printf("seven\n"); 
                    break;
                case 8: printf("eight\n");
                    break;
                case 9: printf("nine\n"); 
                    break;
            }
        } 
        else if (i>9)
        {
            printf("Greater than 9");
        }
    
    
    return 0;
}


//btiwise using conditional
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
//Complete the following function.


void calculate_the_maximum(int n, int k) {
  //Write your code here.
  int max_and=0;
  int max_or=0;
  int max_xor=0;
  
    for(int i=1;i<n;i++){
        for(int j=i+1;j<=n;j++){
            int and = i & j;
            int or =i | j;
            int xor = i ^ j;
            
            if(and<k && and>max_and){
                max_and=and;
            }
            if(or<k && or>max_or){
                max_or=or;
            }
            if(xor<k && xor>max_xor){
                max_xor=xor;
            }
        }  
    }
    printf("%d \n",max_and);
    printf("%d\n",max_or);
    printf("%d\n",max_xor);
}

int main() {
    int n, k;
  
    scanf("%d %d", &n, &k);
    calculate_the_maximum(n, k);
 
    return 0;
}

